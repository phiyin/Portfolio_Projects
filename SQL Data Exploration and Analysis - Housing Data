/*
Data Cleaning and Preparation using SQL
Skills used : UPDATE, SELECT, CTE, JOINS, ORDER BY, GROUP BY, CASE, DELETE, ALTER TABLE, DROP COLUMN
*/

-- Housing Dataset for a start!!!

Select *
From PortfolioProjectHousing.dbo.NashvilleHousing

-----------------------------------------------------------

-- These are the following steps taken to CLEAN and PREPARE the data:
--1. Standarize Sales Date format
--2. Populate Property Address data
--3. Break Address into individual columns (Address, City, State)
--4. Change Y and N to YES and No in Column 'SoldAsVacant'
--5. Remove Duplicates
--6. Delete Unused Columns

--------------------------------------------------------------------------------------------------------------------------

-- Standardize Sales Date Format

ALTER TABLE PortfolioProjectHousing.dbo.NashvilleHousing
ADD SaleDate2 Date

UPDATE PortfolioProjectHousing.dbo.NashvilleHousing
SET SaleDate2 = CONVERT (Date, SaleDate)

SELECT SaleDate, SaleDate2
FROM PortfolioProjectHousing.dbo.NashvilleHousing

 --------------------------------------------------------------------------------------------------------------------------

-- Populate Property Address data
-- Every property has only one Parcel ID, as well as a unique address. 
-- Properties with NULL values as Property address are identified and updated using both Parcel ID and unique ID

Select *
From PortfolioProjectHousing..NashvilleHousing
Where PropertyAddress is null

Select *
From PortfolioProjectHousing..NashvilleHousing
order by ParcelID

Update a
SET PropertyAddress = ISNULL(a.PropertyAddress,b.PropertyAddress)
From PortfolioProjectHousing..NashvilleHousing a
JOIN PortfolioProjectHousing..NashvilleHousing b
	on a.ParcelID = b.ParcelID
	AND a.[UniqueID ] <> b.[UniqueID ]
Where a.PropertyAddress is null

--------------------------------------------------------------------------------------------------------------------------

-- Breaking Address into Individual Columns (Address, City, State)

Select *
From PortfolioProjectHousing.dbo.NashvilleHousing

Select OwnerAddress
From PortfolioProjectHousing.dbo.NashvilleHousing

Select
PARSENAME(REPLACE(OwnerAddress, ',', '.') , 3) 
,PARSENAME(REPLACE(OwnerAddress, ',', '.') , 2)
,PARSENAME(REPLACE(OwnerAddress, ',', '.') , 1)
From PortfolioProjectHousing.dbo.NashvilleHousing


ALTER TABLE PortfolioProjectHousing.dbo.NashvilleHousing
Add OwnerSplitAddress Nvarchar(255);

UPDATE PortfolioProjectHousing.dbo.NashvilleHousing
SET OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 3)

ALTER TABLE PortfolioProjectHousing.dbo.NashvilleHousing
Add OwnerSplitCity Nvarchar(255);

Update PortfolioProjectHousing.dbo.NashvilleHousing
SET OwnerSplitCity = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 2)


ALTER TABLE PortfolioProjectHousing.dbo.NashvilleHousing
Add OwnerSplitState Nvarchar(255);

Update PortfolioProjectHousing.dbo.NashvilleHousing
SET OwnerSplitState = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 1)

Select *
From PortfolioProjectHousing.dbo.NashvilleHousing

--------------------------------------------------------------------------------------------------------------------------

-- Modify incomplete terms Y and N to Yes and No in "Sold as Vacant" field

Select Distinct(SoldAsVacant), Count(SoldAsVacant)
From PortfolioProjectHousing.dbo.NashvilleHousing
Group by SoldAsVacant
order by 2

Select SoldAsVacant
, CASE When SoldAsVacant = 'Y' THEN 'Yes'
	   When SoldAsVacant = 'N' THEN 'No'
	   ELSE SoldAsVacant
	   END
From PortfolioProjectHousing.dbo.NashvilleHousing

Update PortfolioProjectHousing.dbo.NashvilleHousing
SET SoldAsVacant = CASE 
		When SoldAsVacant = 'Y' THEN 'Yes'
		When SoldAsVacant = 'N' THEN 'No'
		ELSE SoldAsVacant
		END
-----------------------------------------------------------------------------------------------------------------------------------------------------------

-- Indentify and remove DUPLICATES using CTE

WITH RowNumCTE AS(
Select *,
	ROW_NUMBER() OVER (
	PARTITION BY ParcelID,
				 PropertyAddress,
				 SalePrice,
				 SaleDate,
				 LegalReference
				 ORDER BY
					UniqueID
					) row_num

From PortfolioProjectHousing.dbo.NashvilleHousing
)	
Delete
From RowNumCTE
Where row_num > 1

---------------------------------------------------------------------------------------------------------

-- Delete Unused Columns

Select *
From PortfolioProjectHousing.dbo.NashvilleHousing

ALTER TABLE PortfolioProjectHousing.dbo.NashvilleHousing
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress, SaleDate
